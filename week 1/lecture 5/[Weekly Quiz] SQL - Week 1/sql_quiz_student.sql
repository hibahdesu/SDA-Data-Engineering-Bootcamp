/*****************************************
# SQL Quiz
# - Query: GROUP BY.. HAVING
# - Query: CASE WHEN
# - Query: Subquery
# - Query: Join
# - Query: Window Function

# Designed by WeCloudData
*****************************************/

/****************************************
	Quiz Data Preparation
*****************************************/
drop database if exists quiz;
create database quiz;
use quiz;

drop table if exists sales;
create table sales (
	rep varchar(10),
    product varchar(10),
    sales_date date,
    amount int
);

insert into sales values 
	('Jack', 'A', '2030-01-15', 10),
    ('Jack', 'A', '2030-02-04', 14),
    ('Jack', 'A', '2030-01-28', 5),
    ('Jack', 'A', '2030-04-05', 12),
    ('Jack', 'A', '2030-03-21', 8),
    ('Jack', 'A', '2030-05-11', 7),
    ('Jack', 'A', '2030-06-17', 11),
    ('Jack', 'A', '2030-07-22', 23),
    ('Jack', 'A', '2030-05-27', 45),
	('Jack', 'A', '2030-01-15', 10),
    ('Jack', 'A', '2030-02-04', 12),
    ('Jack', 'A', '2030-05-28', 5),
    ('Jack', 'A', '2030-08-05', 32),
    ('Jack', 'A', '2030-08-21', 9),
    ('Jack', 'A', '2030-09-11', 17),
    ('Jack', 'A', '2030-10-17', 10),
    ('Jack', 'A', '2030-11-22', 75),
    ('Jack', 'B', '2030-12-27', 65),
	('Jack', 'B', '2030-01-15', 20),
    ('Jack', 'B', '2030-02-04', 24),
    ('Jack', 'B', '2030-01-28', 15),
    ('Jack', 'B', '2030-03-05', 12),
    ('Jack', 'B', '2030-04-21', 8),
    ('Jack', 'B', '2030-08-11', 7),
    ('Jack', 'B', '2030-07-17', 11),
    ('Jack', 'B', '2030-09-22', 53),
    ('Jack', 'B', '2030-10-05', 12),
    ('Jack', 'B', '2030-12-23', 29),
	('Tina', 'A', '2030-01-05', 50),
    ('Tina', 'A', '2030-02-14', 34),
    ('Tina', 'A', '2030-01-23', 25),
    ('Tina', 'A', '2030-03-05', 22),
    ('Tina', 'A', '2030-03-21', 28),
    ('Tina', 'A', '2030-04-11', 17),
    ('Tina', 'A', '2030-07-17', 31),
    ('Tina', 'A', '2030-05-22', 13),
    ('Tina', 'A', '2030-05-27', 45),
	('Tina', 'A', '2030-08-15', 10),
    ('Tina', 'A', '2030-09-04', 12),
    ('Tina', 'A', '2030-10-28', 5),
    ('Tina', 'A', '2030-11-05', 22),
    ('Tina', 'A', '2030-12-21', 9),
	('Tina', 'B', '2030-01-15', 2),
    ('Tina', 'B', '2030-03-05', 5),
    ('Tina', 'B', '2030-06-11', 7),
    ('Tina', 'B', '2030-09-22', 12),
    ('Tina', 'B', '2030-11-08', 22),
    ('Tina', 'B', '2030-12-24', 29)
;

select * from sales order by rep, product;

-- Q1: GROUP BY... HAVING
-- Question: For each sales rep, find products that generate more than $250 sales.
			 -- In the output, include average sales, total sales, and 
             -- count for the product with more than $250 sales amount.
select * from sales;

select rep, product, avg(amount) as avg_sales, sum(amount) as total_sales, count(*) as total_products from sales
group by rep, product
having sum(amount) > 250
order by rep, product;


-- Q2: CASE WHEN
-- Question: Calculate the holiday sales (counting only december sales) 
-- for each sales rep and product.
select * from sales;

select rep, product,  count(case 
								when month(sales_date) = 12 
									then  1
								
								end
							) as holiday_sales
from sales
group by rep, product;

-- Final Solution
select rep, product,  sum(case 
								when month(sales_date) = 12 
									then  amount
								else 0
								end
							) as holiday_sales
from sales
group by rep, product;


-- Q3: Subquery
-- Question: What is the highest monthly sales generated by each sales rep? 

select * from sales;

select rep,  month(sales_date) as month, sum(amount) as monthly_sales
from sales
group by rep,  month(sales_date);

select rep, max(monthly_sales) as max_monthly_sales
from (
		select rep,  month(sales_date) as month, sum(amount) as monthly_sales
		from sales
		group by rep,  month(sales_date)
		) as sub
group by rep
;


-- Q4: Window Function: Rank
-- Question: Which month did each product generate the highest sales? 
-- Hint: Need to calculate the monthly sales of each product first using GROUP BY, 
-- then use a subquery and RANK()

select * from sales;

select product, month(sales_date) as month, sum(amount) as monthly_sales
from sales
group by product, month(sales_date);

select product, 
	   month(sales_date) as month, 
       sum(amount) as monthly_sales,
       rank() over(partition by product order by sum(amount) desc) as ranking
from sales
group by product, month(sales_date);

-- Final Solution
select *
from (
		select product, 
		month(sales_date) as month, 
		sum(amount) as monthly_sales,
		rank() over(partition by product order by sum(amount) desc) as ranking
		from sales
		group by product, month(sales_date)
	) as sub
where ranking = 1;

-- Q5: Window Function: Cumulative Sum
-- Question: Calculate the cumulative sum of sales by rep and month
select * from sales;

select rep, month(sales_date) as month, amount, sum(amount) over(partition by rep order by month(sales_date)) as cumulative_sum 
from sales
order by rep, month(sales_date);

-- Final Solution
select rep, month, cumulative_sum
from (
		select rep, month(sales_date) as month, amount, sum(amount) over(partition by rep order by month(sales_date)) as cumulative_sum 
		from sales
		order by rep, month(sales_date)
	) as sub
order by cumulative_sum desc;

-- Q6 (Optional: Challenge Question): Window Function: Cumulative Sum
-- Question: In which month did each sales rep hit 50% of the yearly total sales? 

select * from sales;

select rep, month(sales_date) as month, sum(amount) as monthly_sales, sum(sum(amount)) over(partition by rep order by month(sales_date)) as yearly_total_sales
from sales
group by rep, month(sales_date);


with yearly as (
				select rep, month(sales_date) as month, sum(amount) as monthly_sales, sum(sum(amount)) over(partition by rep order by month(sales_date)) as yearly_total_sales
				from sales
				group by rep, month(sales_date)
							
                )
select rep, month from (select
						rep, month(sales_date) as month, max(yearly_total_sales)
                        from yearly
                        ) as sub ;
